// Vkontakter - VK Bot Swift SDK.
// This file is autogenerated by API package.

public extension Bot {

    /// Parameters container struct for `getCallbackServers` method
    struct GetCallbackServersParams: JSONEncodable {

        /// Идентификатор сообщества.
        let groupId: Int64
        
        /// Идентификаторы серверов, данные о которых нужно получить. По умолчанию возвращаются все серверы.
        let serverIds: [String]?
        
        public init(groupId: Int64, serverIds: [String]? = nil) {
            self.groupId = groupId
            self.serverIds = serverIds
        }
    
    }
    
    struct GetCallbackServersResp: Codable {
    
        /// Идентификатор сервера.
        let id: Int64
        
        /// Название сервера.
        let title: String
        
        /// Идентификатор пользователя, который добавил сервер (может содержать 0).
        let creatorId: Int64
        
        /// URL сервера.
        let url: String
        
        /// Секретный ключ.
        let secretKey: String
        
        /// Статус сервера. Возможные значения: unconfigured — адрес не задан. failed — подтвердить адрес не удалось. wait — адрес ожидает подтверждения. ok — сервер подключен.
        public enum Status: String, Codable {
            case adres_ozidaet_podtverzdenia = "wait"
            case adres_ne_zadan = "unconfigured"
            case podtverdit_adres_ne_udalos = "failed"
            case server_podklucen = "ok"
        }
        
        let status: Status?
        
        public init(id: Int64, title: String, creatorId: Int64, url: String, secretKey: String, status: Status? = nil) {
            self.id = id
            self.title = title
            self.creatorId = creatorId
            self.url = url
            self.secretKey = secretKey
            self.status = status
        }
    
    }
    
    /**
     Получает информацию о серверах для в сообществе.
     Возвращает число серверов в поле count (integer) и массив объектов items с данными о серверах.

     See also VK API Reference:
     [GetCallbackServers](https://vk.com/dev/groups.getCallbackServers)
     
     - Parameters:
         - params: Parameters container, see `GetCallbackServersParams` struct
     - Throws: Throws on errors
     - Returns: Future of `GetCallbackServersResp` type
     */
    @discardableResult
    func getCallbackServers(params: GetCallbackServersParams) throws -> Future<GetCallbackServersResp> {
        let headers = httpHeaders(for: params)
        return try client
            .request(endpoint: "groups.getCallbackServers", params: params, headers: headers)
            .flatMapThrowing { (container) -> GetCallbackServersResp in
                return try self.processContainer(container)
        }
    }
}
